// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "ui.hpp"

void UserInterface::cb_applyButton_i(Fl_Button*, void*) {
  Set::Colors(&mouseInfo, redSlider->value(), greenSlider->value(), blueSlider->value());
}
void UserInterface::cb_applyButton(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->parent()->user_data()))->cb_applyButton_i(o,v);
}

/**
   Constructor
*/
UserInterface::UserInterface(MouseInfo info) {
  { mainWindow = new Fl_Window(258, 181, "UI Tool");
    mainWindow->box(FL_UP_BOX);
    mainWindow->user_data((void*)(this));
    mainWindow->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    { Fl_Group* o = new Fl_Group(10, 20, 240, 150, "Colors");
      o->box(FL_THIN_UP_BOX);
      { redSlider = new Fl_Value_Slider(20, 30, 215, 20);
        redSlider->type(1);
        redSlider->maximum(255);
        redSlider->step(1);
        redSlider->value(127);
      } // Fl_Value_Slider* redSlider
      { greenSlider = new Fl_Value_Slider(20, 55, 215, 20);
        greenSlider->type(1);
        greenSlider->maximum(255);
        greenSlider->step(1);
        greenSlider->value(127);
      } // Fl_Value_Slider* greenSlider
      { blueSlider = new Fl_Value_Slider(20, 80, 215, 20);
        blueSlider->type(1);
        blueSlider->maximum(255);
        blueSlider->step(1);
        blueSlider->value(127);
      } // Fl_Value_Slider* blueSlider
      { applyButton = new Fl_Button(45, 135, 170, 25, "Apply");
        applyButton->callback((Fl_Callback*)cb_applyButton, (void*)(this));
      } // Fl_Button* applyButton
      o->end();
    } // Fl_Group* o
    mainWindow->end();
  } // Fl_Window* mainWindow
  mouseInfo = info;
  mainWindow->show();
}
