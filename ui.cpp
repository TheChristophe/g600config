// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "ui.hpp"

void UserInterface::cb_redSlider_i(Fl_Value_Slider*, void *) {
  int profileID = atoi(profilePicker->value()) - 1;
mouseData[profileID].m_red = redSlider->value();
mouseData[profileID].m_red2 = redSlider->value();

SetConfig(&mouseInfo, profileID, mouseData[profileID]);
}
void UserInterface::cb_redSlider(Fl_Value_Slider* o, void * v) {
  ((UserInterface*)(o->parent()->parent()->user_data()))->cb_redSlider_i(o,v);
}

void UserInterface::cb_greenSlider_i(Fl_Value_Slider*, void*) {
  int profileID = atoi(profilePicker->value()) - 1;
mouseData[profileID].m_green = greenSlider->value();
mouseData[profileID].m_green2 = greenSlider->value();

SetConfig(&mouseInfo, profileID, mouseData[profileID]);
}
void UserInterface::cb_greenSlider(Fl_Value_Slider* o, void* v) {
  ((UserInterface*)(o->parent()->parent()->user_data()))->cb_greenSlider_i(o,v);
}

void UserInterface::cb_blueSlider_i(Fl_Value_Slider*, void*) {
  int profileID = atoi(profilePicker->value()) - 1;
mouseData[profileID].m_blue = blueSlider->value();
mouseData[profileID].m_blue2 = blueSlider->value();

SetConfig(&mouseInfo, profileID, mouseData[profileID]);
}
void UserInterface::cb_blueSlider(Fl_Value_Slider* o, void* v) {
  ((UserInterface*)(o->parent()->parent()->user_data()))->cb_blueSlider_i(o,v);
}

/**
 Constructor
*/
UserInterface::UserInterface(MouseInfo info) {
  { mainWindow = new Fl_Window(260, 155, "UI Tool");
    mainWindow->box(FL_UP_BOX);
    mainWindow->user_data((void*)(this));
    mainWindow->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
    { Fl_Group* o = new Fl_Group(10, 55, 235, 90, "Colors");
      o->box(FL_THIN_UP_BOX);
      { redSlider = new Fl_Value_Slider(20, 65, 215, 20);
        redSlider->type(1);
        redSlider->maximum(255);
        redSlider->step(1);
        redSlider->value(127);
        redSlider->callback((Fl_Callback*)cb_redSlider);
        redSlider->when(FL_WHEN_RELEASE);
      } // Fl_Value_Slider* redSlider
      { greenSlider = new Fl_Value_Slider(20, 90, 215, 20);
        greenSlider->type(1);
        greenSlider->maximum(255);
        greenSlider->step(1);
        greenSlider->value(127);
        greenSlider->callback((Fl_Callback*)cb_greenSlider);
        greenSlider->when(FL_WHEN_RELEASE);
      } // Fl_Value_Slider* greenSlider
      { blueSlider = new Fl_Value_Slider(20, 115, 215, 20);
        blueSlider->type(1);
        blueSlider->maximum(255);
        blueSlider->step(1);
        blueSlider->value(127);
        blueSlider->callback((Fl_Callback*)cb_blueSlider);
        blueSlider->when(FL_WHEN_RELEASE);
      } // Fl_Value_Slider* blueSlider
      o->end();
    } // Fl_Group* o
    { // The profile to edit
      profilePicker = new Fl_Input_Choice(60, 10, 130, 25, "Profile");
    } // Fl_Input_Choice* profilePicker
    mainWindow->end();
  } // Fl_Window* mainWindow
  mouseInfo = info;
  GetConfig(&mouseInfo, 0, mouseData[0]);
  GetConfig(&mouseInfo, 1, mouseData[1]);
  GetConfig(&mouseInfo, 2, mouseData[2]);
  profilePicker->clear();
  profilePicker->add("1");
  profilePicker->add("2");
  profilePicker->add("3");
  profilePicker->value("1");
  mainWindow->show();
}
